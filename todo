I've decided to try doing the first version of the server side
of this in go (golang), using Gorilla. If all goes well, there will
be a javascript/html front-end that does most of the work, a localstore
option for people who don't want to sync their stuff with a server,
and a simple service/database for people who want to sync, using dropbox
or icloud or whatever.

We'll see. 

So to start my todo list, that I'll delete as soon as funtodone (which is
basically a todo list with more options and attitude than usual) is working
enough to put this todo list in, is:

[ ] sketch out a starting UI 
  [ ] make a paper prototype or two
  [ ] turn it into a layout
[ ] start with a beginner UI, maybe using flux, react, backbone, marionette
  [x] copied in todomvc's backbone+marionette example
  [ ] look into require.js, flux, and react -- worth it?
[ ] implement a basic server side web api and web server for the assets
[ ] think about how to make a mobile web app out of it
[ ] expand and fix this list and move it into funtodone
[ ] do a vertical spike with a single feature
  [ ] do basic layout of top level features
  [ ] implement enough of a schema to show a list of tasks
  [ ] display list of tasks
[ ] start with bootstrap, since we definitely want a simple responsive design
