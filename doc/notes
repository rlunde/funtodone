
I'm switching over to a "standard" linux based install (not using Heroku or
a shared hosting server) -- I signed up for Digital Ocean and mapped the funtodone.com
domain to it.

I want to take a big step back and set up this github project as a "standard" golang-based
web project on github, which will require some investigation.

Here are some links for learning how to get set up on Digital Ocean:
https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04
https://www.digitalocean.com/community/tutorials/how-to-configure-nginx-as-a-web-server-and-reverse-proxy-for-apache-on-one-ubuntu-14-04-droplet

Here are some resources for a "standard" golang project:

https://golang.org/doc/code.html
https://talks.golang.org/2014/organizeio.slide#1
https://github.com/golang/go/wiki/GithubCodeLayout

I found out (finally) that the way most people develop go projects in github is that they make
a symlink from github.com/<theirname>/<project> to their real source directory, or vice versa,
since otherwise you're kind of stuck.

The other thing I'm struggling with is the choice of whether to use the standard "everything
including 6,234 different kitchen sinks" basic template for a react/redux template, with megabytes
of node_modules for a "hello world" type app, or be ornery and insist on doing writing things
that will actually be deployed to the browser, with the exception of things pulled in from a
CDN (e.g. react, redux, and babel).

I'm leaning towards the latter, since I think simplicity is worth fighting for.

